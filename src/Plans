Comments:
Чую, делаю неправильно. Сейчас вью получает всю необходимую информацию о состоянии модели путём запросов
через модел/вьюФасад. Но на сколько я понимаю, это должно быть реализовано с помощью паттерна наблюдатель
и у вью не должно быть никакой возможности обращаться к модел. В общем нужно будет разобраться с этим вопросом.


1. ( DONE! ) Наладить взаимодействие модулей MVC друг с другом;

2. ( In progress! ) Make model
   (Done!) create a Facade pattern to deal with interface
   - create an Observer pattern
   - сделать сохранение пользовательских данных на ПК;
   - сделать загрузку пользовательских данны из ПК в программу;
   - сделать проверку на наличие рабочих папок и файлов и их создание (по умолчанию в моих документах):
      // При инициализации модели должен проверить наличие папки "Learning Cards" в папке "Repo" на рабочем столе, при необходимости создать её; (Есть план дальнейшей модернизации)
      // Внутри "Learning Cards" проверяем наличие папки "Users", при отсутствии создать.
      // Внутри папки пользователи храняться Юзеры в виде папок с именами пользователей, внутри которых хранятся файлы,
         с именами словарей, в которых будут сериализованы их карточки и файл "All Users.txt" в котором будут записаны все имена пользователей

3. ( DONE! ) Make GUI

4. ( DONE! ) Divide the GUI into a view and a controller

5.  ( DONE! ) Сделать классы базовых GUI во view;
    done! BasicGUI;
    done! CardBuilderGUI;
    done! DictionaryGUI;
    done! ExceptionsGUI;
    done! TrainingGUI;
    done! UserBuilderGUI;
    done! UserProfileGuI;
    done! UserSelectGUI;
    done! DictionaryBuilderGUI;



6. ( DONE! )
  a) (DONE!) Добавить внутренние классы слушателей для всех интерактивных объектов во всех базовых GUI:
    done! BasicGUI;
    done! CardBuilderGUI;
    done! DictionaryGUI;
    done! ExceptionsGUI;
    done! TrainingGUI;
    done! UserBuilderGUI;
    done! UserProfileGuI;
    done! UserSelectGUI;
    done! DictionaryBuilderGUI;

  b) (DONE!) Назначить всем интерактивным объектам слушателей
    done! BasicGUI;
    done! CardBuilderGUI;
    done! DictionaryGUI;
    done! ExceptionsGUI;
    done! TrainingGUI;
    done! UserBuilderGUI;
    done! UserProfileGuI;
    done! UserSelectGUI;
    done! DictionaryBuilderGUI;


7. Добавить логику в слушателей во всех базовых классах GUI в модуле view
    done! BasicGUI;
    done! progress UserBuilderGUI;
    done! progress UserSelectGUI;
    in progress UserProfileGui;
    done! DictionaryBuilderGUI;
    - TrainingGUI;
    - CurrentDictionaryGUI;
    - CardBuilderGUI;
    - DictionaryBuilderGUI
    done! ExceptionsGUI;

8. ( DONE! ) Сделать рефакторинг GUI:
   done! сделать отдельный BasicGUI с фреймом, меню бар и главной панелью
   done! унаследовать все GUI от BasicGUI
   done! UserSelectGUI;
   done! UserProfileGui;
   done! TrainingGUI;
   done! DictionaryGUI;
   done! CardBuilderGUI;

9. ( DONE! ) Наладить взаимодейтвие Controller с фасадом модели

10. Наладить наблюдение View за состоянием модели

11. ( Done! ) Solve problem with UserProfileGUI. Check problem in class comments

12. ( Важно !) Problem with updating available users list after creating new user

13. ( DONE! ) createUser() in model troubles with adding new User in UserSelectGUI usersList

14. ( DONE! ) UserSelectedGUI deleteUser() It work, but JList in GUI doesn't change after successful delete user. Trouble in model deleteUser();

15. ( FIXED! ) BUG !!!
    ( fixed! ) it seems some troubles with text area! It list there is no null checking!!!
    ( fixed! ) DictionaryBuilderGUI/ button "Create new Dictionary": nothing happens;

16. ( FIXED! ) validation after entered Dictionary name doesn't work at all cases

17. In userProfileGUI should add an "Edit Dictionary" button. Доделать экшен лисенер
